DAO_ID = "testtec" + Math.random() // Note this must be unique for each deployment, change it for subsequent deployments
NETWORK_ARG = "--network" // local
DAO_ID_ARG = "--daoid"  // DAO_ID
NON_MINIME_COLLATERAL = "--nonminime" // false
ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'
TOKEN_OWNER = "0xDc2aDfA800a1ffA16078Ef8C1F251D50DcDa1065"
HOURS = 60 * 60
DAYS = 24 * HOURS
ONE_HUNDRED_PERCENT = 1e18
ONE_TOKEN = 1e18
FUNDRAISING_ONE_HUNDRED_PERCENT = 1e6
FUNDRAISING_ONE_TOKEN = 1e18
COLLATERAL_TOKEN_NAME = "Test DAI"
COLLATERAL_TOKEN_SYMBOL = "tDAI"
COLLATERAL_TOKEN_DECIMALS = 18
COLLATERAL_TOKEN_TRANSFERS_ENABLED = true
COLLATERAL_BALANCE = 10e23
ORG_TOKEN_NAME = "Token Engineering Commons TEST Token"
ORG_TOKEN_SYMBOL = "TESTTEC"
SUPPORT_REQUIRED = 0.6 * ONE_HUNDRED_PERCENT
MIN_ACCEPTANCE_QUORUM = 0.02 * ONE_HUNDRED_PERCENT
VOTE_DURATION_BLOCKS = 3 * DAYS / 5 // 3 days on xDAI, ~1 day on Rinkeby
VOTE_BUFFER_BLOCKS = 8 * HOURS / 5 // 8 hours on xDAI, ~2 hours & 40 minutes on Rinkeby
VOTE_EXECUTION_DELAY_BLOCKS = 24 * HOURS / 5 // 24 hours on xDAI, 8 hours on Rinkeby
VOTING_SETTINGS = [SUPPORT_REQUIRED, MIN_ACCEPTANCE_QUORUM, VOTE_DURATION_BLOCKS, VOTE_BUFFER_BLOCKS, VOTE_EXECUTION_DELAY_BLOCKS]
USE_AGENT_AS_VAULT = false
TOLLGATE_FEE = 3 * ONE_TOKEN

// Create dao transaction three config
PRESALE_GOAL = 300 * ONE_TOKEN
PRESALE_PERIOD = 7 * DAYS
PRESALE_EXCHANGE_RATE = 0.00000001 * FUNDRAISING_ONE_TOKEN
VESTING_CLIFF_PERIOD = PRESALE_PERIOD + 3 * DAYS // 3 days after presale
VESTING_COMPLETE_PERIOD = VESTING_CLIFF_PERIOD + 3 * 7 * DAYS // 3 weeks after cliff
PRESALE_PERCENT_SUPPLY_OFFERED = FUNDRAISING_ONE_HUNDRED_PERCENT
PRESALE_PERCENT_FUNDING_FOR_BENEFICIARY = 0.35 * FUNDRAISING_ONE_HUNDRED_PERCENT
OPEN_DATE = 0
BUY_FEE_PCT = 0 * ONE_HUNDRED_PERCENT
SELL_FEE_PCT = 0.2 * ONE_HUNDRED_PERCENT

// Create dao transaction four config
VIRTUAL_SUPPLY = 2 // TODO
VIRTUAL_BALANCE = 1 // TODO
RESERVE_RATIO = 0.1 * FUNDRAISING_ONE_HUNDRED_PERCENT

scale = n => parseInt(n * 10 ** 7)
HALFTIME = 0.5 * DAYS //
BLOCKTIME = 15 // 15 rinkeby, 13 mainnet, 5 xdai
CONVERTED_TIME = 1/BLOCKTIME * HALFTIME
DECAY = 1/2 ** (1/CONVERTED_TIME) // alpha
MAX_RATIO = 0.4 // 40 percent
MIN_THRESHOLD = 0.005 // 0.5 percent
WEIGHT = MAX_RATIO ** 2 * MIN_THRESHOLD // determine weight based on MAX_RATIO and MIN_THRESHOLD
// MIN_EFFECTIVE_SUPPLY = 0.0025 * ONE_HUNDRED_PERCENT // 0.25% minimum effective supply
CONVICTION_SETTINGS = [scale(DECAY), scale(MAX_RATIO), scale(WEIGHT)]

// DAO one
      ORG_TOKEN_NAME,
      ORG_TOKEN_SYMBOL,
      VOTING_SETTINGS,
      USE_AGENT_AS_VAULT,
      TOKEN_OWNER

// DAO two
      collateralToken.address,
      TOLLGATE_FEE,
      [collateralToken.address],
      CONVICTION_SETTINGS,
      collateralToken.address

// DAO three
      PRESALE_GOAL,
      PRESALE_PERIOD,
      PRESALE_EXCHANGE_RATE,
      VESTING_CLIFF_PERIOD,
      VESTING_COMPLETE_PERIOD,
      PRESALE_PERCENT_SUPPLY_OFFERED,
      PRESALE_PERCENT_FUNDING_FOR_BENEFICIARY,
      OPEN_DATE,
      BUY_FEE_PCT,
      SELL_FEE_PCT

// DAO four
      daoId(),
      VIRTUAL_SUPPLY,
      VIRTUAL_BALANCE,
      RESERVE_RATIO
